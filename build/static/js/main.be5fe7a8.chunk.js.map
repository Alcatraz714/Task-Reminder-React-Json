{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be5fe7a8.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nexport const Button = ({ color , text, onClick }) => {\r\n    \r\n    return <button onClick={onClick} style={{ backgroundColor: color }} className='btn'>{text}</button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title, onAdd, showAdd}) => {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'darkblue' : 'darkgreen'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n// if wanted to use inline styling js\r\n// const headingStyle = {\r\n//     color:'red', \r\n//     backgroundColor:'black'\r\n// }\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=>onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{color:'darkblue', cursor: 'pointer'}} onClick={() => onDelete(task.id)} /></h3>\r\n            <p>{task.day}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    \r\n    return (\r\n        <>\r\n          {tasks.map((task) => (\r\n              <Task key={task.id} \r\n              task={task} \r\n              onDelete={onDelete}\r\n              onToggle={onToggle}\r\n              />\r\n          )) }  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState} from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' \r\n                placeholder='Add Task'\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}\r\n                ></input>\r\n            </div>\r\n            \r\n            <div className='form-control'>\r\n                <label>Day and Time</label>\r\n                <input type='text' \r\n                placeholder='Add Time and Day'\r\n                value={day}\r\n                onChange={(e) => setDay(e.target.value)}\r\n                ></input>\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox'\r\n                checked={reminder}\r\n                value={reminder}\r\n                onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                ></input>\r\n            </div>\r\n\r\n            <input type='submit' value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n\n  const [tasks, setTasks] = useState([\n    {\n        id:1,\n        text:'get up ',\n        day:'Feb 5th at 2:30 pm',\n        reminder: true,\n    },\n    {\n        id:2,\n        text:'get low ',\n        day:'Feb 7th at 1:30 pm',\n        reminder: true,\n    },\n    {\n        id:3,\n        text:'get high ',\n        day:'Feb 1th at 2:30 am',\n        reminder: true,\n    }\n])\n  // add Tasks \n  const addTask = (task) => {\n    const id= Math.floor(Math.random()*10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  // delete tasks\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !==id))\n  }\n  // toggle reminder\n  const toggleReminder = (id) =>{\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n  }\n  return (\n    <div className=\"container\">\n      \n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      { showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ?(<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/>) : ('No tasks Remain')}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}